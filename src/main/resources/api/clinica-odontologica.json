{
  "swagger": "2.0",
  "info": {
    "description": "Clinica Odontologica",
    "version": "1.0",
    "title": "Api Clinica Odontologica",
    "termsOfService": "urn:tos",
    "contact": {

    },
    "license": {
      "name": "Apache 2.0",
      "url": "http://www.apache.org/licenses/LICENSE-2.0"
    }
  },
  "host": "localhost:8081",
  "basePath": "/",
  "tags": [
    {
      "name": "basic-error-controller",
      "description": "Basic Error Controller"
    },
    {
      "name": "odontologo-controller",
      "description": "Odontologo Controller"
    },
    {
      "name": "paciente-controller",
      "description": "Paciente Controller"
    },
    {
      "name": "turno-controller",
      "description": "Turno Controller"
    }
  ],
  "paths": {
    "/error": {
      "get": {
        "tags": [
          "basic-error-controller"
        ],
        "summary": "errorHtml",
        "operationId": "errorHtmlUsingGET",
        "produces": [
          "text/html"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ModelAndView"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      },
      "head": {
        "tags": [
          "basic-error-controller"
        ],
        "summary": "errorHtml",
        "operationId": "errorHtmlUsingHEAD",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "text/html"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ModelAndView"
            }
          },
          "204": {
            "description": "No Content"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        }
      },
      "post": {
        "tags": [
          "basic-error-controller"
        ],
        "summary": "errorHtml",
        "operationId": "errorHtmlUsingPOST",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "text/html"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ModelAndView"
            }
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      },
      "put": {
        "tags": [
          "basic-error-controller"
        ],
        "summary": "errorHtml",
        "operationId": "errorHtmlUsingPUT",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "text/html"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ModelAndView"
            }
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      },
      "delete": {
        "tags": [
          "basic-error-controller"
        ],
        "summary": "errorHtml",
        "operationId": "errorHtmlUsingDELETE",
        "produces": [
          "text/html"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ModelAndView"
            }
          },
          "204": {
            "description": "No Content"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        }
      },
      "options": {
        "tags": [
          "basic-error-controller"
        ],
        "summary": "errorHtml",
        "operationId": "errorHtmlUsingOPTIONS",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "text/html"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ModelAndView"
            }
          },
          "204": {
            "description": "No Content"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        }
      },
      "patch": {
        "tags": [
          "basic-error-controller"
        ],
        "summary": "errorHtml",
        "operationId": "errorHtmlUsingPATCH",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "text/html"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ModelAndView"
            }
          },
          "204": {
            "description": "No Content"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        }
      }
    },
    "/odontologos/actualizar/{id}": {
      "put": {
        "tags": [
          "odontologo-controller"
        ],
        "summary": "Modificar Odontologo con el id proporcionado",
        "operationId": "actualizarOdontologoUsingPUT",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "id",
            "required": true,
            "type": "integer",
            "format": "int64"
          },
          {
            "in": "body",
            "name": "odontologoEntradaDto",
            "description": "odontologoEntradaDto",
            "required": true,
            "schema": {
              "$ref": "#/definitions/OdontologoEntradaDto"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/OdontologoSalidaDto"
            }
          },
          "201": {
            "description": "Created"
          },
          "202": {
            "description": "El Odontologo ha sido modificado correctamente",
            "schema": {
              "$ref": "#/definitions/OdontologoSalidaDto"
            }
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          },
          "500": {
            "description": "Server error"
          }
        }
      }
    },
    "/odontologos/borrar/{id}": {
      "delete": {
        "tags": [
          "odontologo-controller"
        ],
        "summary": "Eliminar Odontolodo con el id proporcionado",
        "operationId": "eliminarOdontologoUsingDELETE",
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "id",
            "required": true,
            "type": "integer",
            "format": "int64"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "object"
            }
          },
          "204": {
            "description": "Odontologo eliminado exitosamente",
            "schema": {
              "$ref": "#/definitions/OdontologoSalidaDto"
            }
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "500": {
            "description": "Server error"
          }
        }
      }
    },
    "/odontologos/buscar/{id}": {
      "get": {
        "tags": [
          "odontologo-controller"
        ],
        "summary": "Buscar Odontologo con el id proporcionado",
        "operationId": "buscarOdontologoIdUsingGET",
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "id",
            "required": true,
            "type": "integer",
            "format": "int64"
          }
        ],
        "responses": {
          "200": {
            "description": "Odontologo encontrado",
            "schema": {
              "$ref": "#/definitions/OdontologoSalidaDto"
            }
          },
          "400": {
            "description": "Id invalido"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Odontologo no encontrado"
          },
          "500": {
            "description": "Server error"
          }
        }
      }
    },
    "/odontologos/listar": {
      "get": {
        "tags": [
          "odontologo-controller"
        ],
        "summary": "Listar todos los odontologos",
        "operationId": "listarOdontologoUsingGET",
        "produces": [
          "*/*"
        ],
        "responses": {
          "200": {
            "description": "Listado de odontologos disponible",
            "schema": {
              "$ref": "#/definitions/OdontologoSalidaDto"
            }
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          },
          "500": {
            "description": "Server error"
          }
        }
      }
    },
    "/odontologos/registrar": {
      "post": {
        "tags": [
          "odontologo-controller"
        ],
        "summary": "Registro de un nuevo odontólogo",
        "operationId": "registrarOdontologoUsingPOST",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "odontologoEntradaDto",
            "description": "odontologoEntradaDto",
            "required": true,
            "schema": {
              "$ref": "#/definitions/OdontologoEntradaDto"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/OdontologoSalidaDto"
            }
          },
          "201": {
            "description": "Odontólogo guardado correctamente",
            "schema": {
              "$ref": "#/definitions/OdontologoSalidaDto"
            }
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          },
          "500": {
            "description": "Server error"
          }
        }
      }
    },
    "/pacientes/actualizar/{id}": {
      "put": {
        "tags": [
          "paciente-controller"
        ],
        "summary": "Modificar paciente con el id proporcionado",
        "operationId": "actualizarPacienteUsingPUT",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "id",
            "required": true,
            "type": "integer",
            "format": "int64"
          },
          {
            "in": "body",
            "name": "pacienteEntradaDto",
            "description": "pacienteEntradaDto",
            "required": true,
            "schema": {
              "$ref": "#/definitions/PacienteEntradaDto"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/PacienteSalidaDto"
            }
          },
          "201": {
            "description": "Created"
          },
          "202": {
            "description": "El paciente ha sido modificado correctamente",
            "schema": {
              "$ref": "#/definitions/PacienteSalidaDto"
            }
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          },
          "500": {
            "description": "Server error"
          }
        }
      }
    },
    "/pacientes/borrar/{id}": {
      "delete": {
        "tags": [
          "paciente-controller"
        ],
        "summary": "Eliminar paciente con el id proporcionado",
        "operationId": "borrarPacienteUsingDELETE",
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "id",
            "required": true,
            "type": "integer",
            "format": "int64"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "object"
            }
          },
          "204": {
            "description": "Paciente eliminado exitosamente",
            "schema": {
              "$ref": "#/definitions/PacienteSalidaDto"
            }
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "500": {
            "description": "Server error"
          }
        }
      }
    },
    "/pacientes/buscar/{id}": {
      "get": {
        "tags": [
          "paciente-controller"
        ],
        "summary": "Buscar paciente con el id proporcionado",
        "operationId": "buscarPacienteIdUsingGET",
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "id",
            "required": true,
            "type": "integer",
            "format": "int64"
          }
        ],
        "responses": {
          "200": {
            "description": "paciente encontrado",
            "schema": {
              "$ref": "#/definitions/PacienteSalidaDto"
            }
          },
          "400": {
            "description": "Id invalido"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Paciente no encontrado"
          },
          "500": {
            "description": "Server error"
          }
        }
      }
    },
    "/pacientes/listar": {
      "get": {
        "tags": [
          "paciente-controller"
        ],
        "summary": "Listar todos los pacientes",
        "operationId": "listarPacienteUsingGET",
        "produces": [
          "*/*"
        ],
        "responses": {
          "200": {
            "description": "Listado de pacientes disponible",
            "schema": {
              "$ref": "#/definitions/PacienteSalidaDto"
            }
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          },
          "500": {
            "description": "Server error"
          }
        }
      }
    },
    "/pacientes/registrar": {
      "post": {
        "tags": [
          "paciente-controller"
        ],
        "summary": "Registro de un nuevo paciente",
        "operationId": "registrarpacienteUsingPOST",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "pacienteEntradaDto",
            "description": "pacienteEntradaDto",
            "required": true,
            "schema": {
              "$ref": "#/definitions/PacienteEntradaDto"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/PacienteSalidaDto"
            }
          },
          "201": {
            "description": "Paciente guardado correctamente",
            "schema": {
              "$ref": "#/definitions/PacienteSalidaDto"
            }
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          },
          "500": {
            "description": "Server error"
          }
        }
      }
    },
    "/turnos/actualizar/{id}": {
      "put": {
        "tags": [
          "turno-controller"
        ],
        "summary": "Modificar turno con el id proporcionado",
        "operationId": "actualizarTurnoUsingPUT",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "id",
            "required": true,
            "type": "integer",
            "format": "int64"
          },
          {
            "in": "body",
            "name": "turnoEntradaDto",
            "description": "turnoEntradaDto",
            "required": true,
            "schema": {
              "$ref": "#/definitions/TurnoEntradaDto"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/TurnoSalidaDto"
            }
          },
          "201": {
            "description": "Created"
          },
          "202": {
            "description": "El turno ha sido modificado correctamente",
            "schema": {
              "$ref": "#/definitions/TurnoSalidaDto"
            }
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          },
          "500": {
            "description": "Server error"
          }
        }
      }
    },
    "/turnos/borrar/{id}": {
      "delete": {
        "tags": [
          "turno-controller"
        ],
        "summary": "Eliminar turno con el id proporcionado",
        "operationId": "eliminarTurnoUsingDELETE",
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "id",
            "required": true,
            "type": "integer",
            "format": "int64"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "object"
            }
          },
          "204": {
            "description": "Turno eliminado exitosamente",
            "schema": {
              "$ref": "#/definitions/TurnoSalidaDto"
            }
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "500": {
            "description": "Server error"
          }
        }
      }
    },
    "/turnos/buscar/{id}": {
      "get": {
        "tags": [
          "turno-controller"
        ],
        "summary": "Buscar turno con el id proporcionado",
        "operationId": "buscarPorIdUsingGET",
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "id",
            "required": true,
            "type": "integer",
            "format": "int64"
          }
        ],
        "responses": {
          "200": {
            "description": "turno encontrado",
            "schema": {
              "$ref": "#/definitions/TurnoSalidaDto"
            }
          },
          "400": {
            "description": "Id invalido"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Turno no encontrado"
          },
          "500": {
            "description": "Server error"
          }
        }
      }
    },
    "/turnos/listar": {
      "get": {
        "tags": [
          "turno-controller"
        ],
        "summary": "Listar todos los turnos",
        "operationId": "listarTodosUsingGET",
        "produces": [
          "*/*"
        ],
        "responses": {
          "200": {
            "description": "Listado de turnos disponible",
            "schema": {
              "$ref": "#/definitions/TurnoSalidaDto"
            }
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          },
          "500": {
            "description": "Server error"
          }
        }
      }
    },
    "/turnos/registrar": {
      "post": {
        "tags": [
          "turno-controller"
        ],
        "summary": "Registro de un nuevo turno",
        "operationId": "registrarUsingPOST",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "turnoEntradaDto",
            "description": "turnoEntradaDto",
            "required": true,
            "schema": {
              "$ref": "#/definitions/TurnoEntradaDto"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/TurnoSalidaDto"
            }
          },
          "201": {
            "description": "Turno guardado correctamente",
            "schema": {
              "$ref": "#/definitions/TurnoSalidaDto"
            }
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          },
          "500": {
            "description": "Server error"
          }
        }
      }
    }
  },
  "definitions": {
    "DomicilioEntradaDto": {
      "type": "object",
      "properties": {
        "calle": {
          "type": "string",
          "description": "Hace referencia a la calle del domicilio correspondiente",
          "minLength": 3,
          "maxLength": 100
        },
        "localidad": {
          "type": "string",
          "description": "Hace referencia a la localidad del domicilio correspondiente",
          "minLength": 3,
          "maxLength": 50
        },
        "numero": {
          "type": "integer",
          "format": "int32",
          "description": "Hace referencia al numero de la calle del domicilio correspondiente"
        },
        "provincia": {
          "type": "string",
          "description": "Hace referencia a la provincia del domicilio correspondiente",
          "minLength": 3,
          "maxLength": 58
        }
      },
      "title": "DomicilioEntradaDto",
      "description": "Estructura de datos de entrada para el domicilio del paciente"
    },
    "DomicilioSalidaDto": {
      "type": "object",
      "properties": {
        "calle": {
          "type": "string"
        },
        "idDomicilio": {
          "type": "integer",
          "format": "int64"
        },
        "localidad": {
          "type": "string"
        },
        "numero": {
          "type": "integer",
          "format": "int32"
        },
        "provincia": {
          "type": "string"
        }
      },
      "title": "DomicilioSalidaDto"
    },
    "ModelAndView": {
      "type": "object",
      "properties": {
        "empty": {
          "type": "boolean"
        },
        "model": {
          "type": "object"
        },
        "modelMap": {
          "type": "object",
          "additionalProperties": {
            "type": "object"
          }
        },
        "reference": {
          "type": "boolean"
        },
        "status": {
          "type": "string",
          "enum": [
            "ACCEPTED",
            "ALREADY_REPORTED",
            "BAD_GATEWAY",
            "BAD_REQUEST",
            "BANDWIDTH_LIMIT_EXCEEDED",
            "CHECKPOINT",
            "CONFLICT",
            "CONTINUE",
            "CREATED",
            "DESTINATION_LOCKED",
            "EXPECTATION_FAILED",
            "FAILED_DEPENDENCY",
            "FORBIDDEN",
            "FOUND",
            "GATEWAY_TIMEOUT",
            "GONE",
            "HTTP_VERSION_NOT_SUPPORTED",
            "IM_USED",
            "INSUFFICIENT_SPACE_ON_RESOURCE",
            "INSUFFICIENT_STORAGE",
            "INTERNAL_SERVER_ERROR",
            "I_AM_A_TEAPOT",
            "LENGTH_REQUIRED",
            "LOCKED",
            "LOOP_DETECTED",
            "METHOD_FAILURE",
            "METHOD_NOT_ALLOWED",
            "MOVED_PERMANENTLY",
            "MOVED_TEMPORARILY",
            "MULTIPLE_CHOICES",
            "MULTI_STATUS",
            "NETWORK_AUTHENTICATION_REQUIRED",
            "NON_AUTHORITATIVE_INFORMATION",
            "NOT_ACCEPTABLE",
            "NOT_EXTENDED",
            "NOT_FOUND",
            "NOT_IMPLEMENTED",
            "NOT_MODIFIED",
            "NO_CONTENT",
            "OK",
            "PARTIAL_CONTENT",
            "PAYLOAD_TOO_LARGE",
            "PAYMENT_REQUIRED",
            "PERMANENT_REDIRECT",
            "PRECONDITION_FAILED",
            "PRECONDITION_REQUIRED",
            "PROCESSING",
            "PROXY_AUTHENTICATION_REQUIRED",
            "REQUESTED_RANGE_NOT_SATISFIABLE",
            "REQUEST_ENTITY_TOO_LARGE",
            "REQUEST_HEADER_FIELDS_TOO_LARGE",
            "REQUEST_TIMEOUT",
            "REQUEST_URI_TOO_LONG",
            "RESET_CONTENT",
            "SEE_OTHER",
            "SERVICE_UNAVAILABLE",
            "SWITCHING_PROTOCOLS",
            "TEMPORARY_REDIRECT",
            "TOO_EARLY",
            "TOO_MANY_REQUESTS",
            "UNAUTHORIZED",
            "UNAVAILABLE_FOR_LEGAL_REASONS",
            "UNPROCESSABLE_ENTITY",
            "UNSUPPORTED_MEDIA_TYPE",
            "UPGRADE_REQUIRED",
            "URI_TOO_LONG",
            "USE_PROXY",
            "VARIANT_ALSO_NEGOTIATES"
          ]
        },
        "view": {
          "$ref": "#/definitions/View"
        },
        "viewName": {
          "type": "string"
        }
      },
      "title": "ModelAndView"
    },
    "OdontologoEntradaDto": {
      "type": "object",
      "properties": {
        "apellido": {
          "type": "string",
          "description": "Hace referencia al apellido del odontologo correspondiente",
          "minLength": 3,
          "maxLength": 50
        },
        "nombre": {
          "type": "string",
          "description": "Hace referencia al nombre del odontologo correspondiente",
          "minLength": 3,
          "maxLength": 50
        },
        "numeroMatricula": {
          "type": "integer",
          "format": "int32",
          "description": "Hace referencia al numero de matricula del odontologo correspondiente"
        }
      },
      "title": "OdontologoEntradaDto",
      "description": "Estructura de datos de entrada para el odontologo"
    },
    "OdontologoSalidaDto": {
      "type": "object",
      "properties": {
        "apellido": {
          "type": "string"
        },
        "id": {
          "type": "integer",
          "format": "int64"
        },
        "nombre": {
          "type": "string"
        },
        "numeroMatricula": {
          "type": "integer",
          "format": "int32"
        }
      },
      "title": "OdontologoSalidaDto"
    },
    "PacienteEntradaDto": {
      "type": "object",
      "properties": {
        "apellido": {
          "type": "string",
          "description": "Hace referencia al apellido del paciente correspondiente",
          "minLength": 3,
          "maxLength": 50
        },
        "dni": {
          "type": "integer",
          "format": "int32",
          "description": "Hace referencia al dni del paciente correspondiente"
        },
        "domicilio": {
          "description": "Hace referencia al domicilio del paciente correspondiente",
          "$ref": "#/definitions/DomicilioEntradaDto"
        },
        "fechaIngreso": {
          "type": "string",
          "description": "Hace referencia a la fecha de ingreso del paciente correspondiente"
        },
        "nombre": {
          "type": "string",
          "description": "Hace referencia al nombre del paciente correspondiente",
          "minLength": 3,
          "maxLength": 50
        }
      },
      "title": "PacienteEntradaDto",
      "description": "Estructura de datos de entrada para el paciente"
    },
    "PacienteSalidaDto": {
      "type": "object",
      "properties": {
        "apellido": {
          "type": "string"
        },
        "dni": {
          "type": "integer",
          "format": "int32"
        },
        "domicilioSalidaDto": {
          "$ref": "#/definitions/DomicilioSalidaDto"
        },
        "fechaIngreso": {
          "type": "string",
          "format": "date"
        },
        "id": {
          "type": "integer",
          "format": "int64"
        },
        "nombre": {
          "type": "string"
        }
      },
      "title": "PacienteSalidaDto"
    },
    "TurnoEntradaDto": {
      "type": "object",
      "properties": {
        "fechaYHora": {
          "type": "string",
          "description": "Hace referencia a la fecha y hora del turno correspondiente"
        },
        "odontologoId": {
          "type": "integer",
          "format": "int64",
          "description": "Hace referencia al id del odontologo del turno correspondiente"
        },
        "pacienteId": {
          "type": "integer",
          "format": "int64",
          "description": "Hace referencia al id del paciente del turno correspondiente"
        }
      },
      "title": "TurnoEntradaDto",
      "description": "Estructura de datos de entrada para el turno"
    },
    "TurnoSalidaDto": {
      "type": "object",
      "properties": {
        "fechaYHora": {
          "type": "string",
          "example": "yyyy-MM-dd HH:mm:ss"
        },
        "id": {
          "type": "integer",
          "format": "int64"
        },
        "odontologoSalidaDto": {
          "$ref": "#/definitions/OdontologoSalidaDto"
        },
        "pacienteSalidaDto": {
          "$ref": "#/definitions/PacienteSalidaDto"
        }
      },
      "title": "TurnoSalidaDto"
    },
    "View": {
      "type": "object",
      "properties": {
        "contentType": {
          "type": "string"
        }
      },
      "title": "View"
    }
  }
}